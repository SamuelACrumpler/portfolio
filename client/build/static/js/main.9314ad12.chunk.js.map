{"version":3,"sources":["routes/nav.js","routes/footer.js","routes/home.js","routes/projects.js","routes/about.js","routes/contact.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","state","list","title","link","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","map","index","Component","Footer","target","rel","home","lstProject","data","console","log","class","data-ride","project","data-slide-to","src","pic","alt","web","disabled","git","role","data-slide","aria-hidden","sourceType","screenName","options","height","projects","parseInt","tags","tag","desc","about","skills","skill","contact","arr","window","location","split","result","name","email","message","status","error","response","path","onChange","bind","handleCaptchaResponseChange","event","value","setState","res","preventDefault","document","getElementById","classList","remove","axios","post","then","reset","onSubmit","handleSubmit","method","for","aria-describedby","rows","ref","el","recaptcha","sitekey","verifyCallback","onloadCallback","callback","App","component","withRouter","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9314ad12.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Navbar extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlist : [{title: 'Home', link: '/'}, {title: 'About', link: '/about'},  {title: 'Projects', link: '/projects'}, {title: 'Contact', link: '/contact'},  ]\n\t\t}\n\n\t\n\t}\n    \n    render() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-dark navbar-expand-lg navbar-l navcolor shadow p-0 static-top mb-2 rounded\">\n\t\t\t\t<div className=\"container p-0\">\n\t\t\t\t\t<a className=\"navbar-brand ml-3\" href=\"/\"><span className=\"htextcol\">Samuel</span><span className=\"B612R\"> Crumpler</span></a>\n\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.list.map((list, index) => {\n\t\t\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={index}>\n\t\t\t\t\t\t\t\t\t\t<a className=\"nav-link pt-3 pb-3 text-center\" href={list.link}>{list.title}</a>\n\t\t\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\n\t\t);\n\t}\n\n}\n    \n\nexport default Navbar;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render(){\n        return(\n            <div className=\"row m-0 mt-2 p-2 rounded offcolor\">\n                <div className=\"col-12 text-center p-2 contentcolor rounded\">\n                <a href=\"https://github.com/SamuelACrumpler\" target=\"_blank\"  rel=\"noreferrer\" className=\"fa fa-github\"><span className=\"sr-only sr-only focusable\">Github</span></a>\n                <a href=\"https://www.linkedin.com/in/samuel-c-864930138/\" target=\"_blank\"  rel=\"noreferrer\" className=\"fa fa-linkedin\"><span className=\"sr-only sr-only focusable\">LinkedIn</span></a>\n                <a href=\"mailto:samuel.a.crumpler@gmail.com\" className=\"fa fa-envelope\"><span className=\"sr-only sr-only focusable\">E-Mail</span></a>\n\n                </div>\n                <div className=\"col-12 text-center mt-2 contentcolor rounded\">Copyright &#169; Samuel Crumpler 2020</div>\n                 \n            </div>\n        )\n\n\n    }\n}\n\nexport default Footer","import React, { Component } from 'react';\nimport Navbar from './nav';\nimport wall from '../imgs/wall.png';\nimport Footer from './footer';\nimport data from \"../files/projects\"\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nclass home extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            list : [{title: 'Home', link: '/'}, {title: 'About', link: '/about'},  {title: 'Projects', link: '/projects'}, {title: 'Contact', link: '/contact'},  ],\n            lstProject : data\n\t\t}\n        \n        console.log(data)\n\t\n    }\n    \n    //fix up the margin setup\n\n    render() {\n\t\treturn (\n            <div className=\"container p-2 rounded\">\n                <Navbar/>\n\n                <div className=\"row mb-3 offcolor  m-0 shadow rounded\">\n                        <div className=\"col-lg p-1 rounded\">\n                            <h5 className=\"contentcolor rounded p-3 m-1\">Hi. I'm Samuel, and I'm a full stack developer</h5>\n                        </div>\n                    <div className=\"row m-0\">\n\n                        <div className=\"col-lg-9 pb-2   rounded\"> \n                            \n                            <div id=\"carousel\" class=\"carousel slide pt-0\" data-ride=\"carousel\">\n                                <ol className=\"carousel-indicators\">\n                                    {\n                                        this.state.lstProject.map((project, index) =>{\n                                            if(index === 0){//for the first item\n                                                return <li data-target=\"#carousel\" key={index} data-slide-to={index} className=\"active\"></li>\n                                            }else{\n                                                return <li data-target=\"#carousel\" data-slide-to={index}></li>\n                                            }\n                                        })\n                                    }\n                                </ol>\n                                <div className=\"carousel-inner\">\n                                    {\n                                        this.state.lstProject.map((project, index) =>{\n                                            if(index === 0){//for the first item\n                                                return <div class=\"carousel-item active\">\n                                                            <img class=\"d-block w-100 rounded\" src={project.pic} alt=\"\"/>\n                                                            <div class=\"carousel-caption d-none d-md-block text-center\">\n                                                                <h5>{project.title}</h5>\n                                                                <p>Project Summary Here?</p>\n                                                                <button type=\"button\" className=\"btn btn-primary mr-1\">\n                                                                    <a href={project.web} target=\"_blank\"  rel=\"noreferrer\">View Project On Web</a>\n                                                                </button>\n                                                                <button type=\"button\" className={project.disabled + \" btn btn-primary ml-1\"}>\n                                                                    <a href={project.git} target=\"_blank\"  rel=\"noreferrer\">View Project on GitHub</a>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                            }else{\n                                                return <div class=\"carousel-item\">\n                                                            <img class=\"d-block w-100 rounded\" src={project.pic} alt=\"\"/>\n                                                            <div class=\"carousel-caption d-none d-md-block\">\n                                                                <h5>{project.title}</h5>\n                                                                <p>Project Summary Here?</p>\n                                                                <button type=\"button\" className=\"btn btn-primary mr-1\">\n                                                                    <a href={project.web} target=\"_blank\"  rel=\"noreferrer\">View Project On Web</a>\n                                                                </button>\n                                                                <button type=\"button\" className={project.disabled + \" btn btn-primary ml-1\"}>\n                                                                    <a href={project.git} target=\"_blank\"  rel=\"noreferrer\">View Project on GitHub</a>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                            }\n                                        })\n                                    }\n                                    \n                                </div>\n                                <a class=\"carousel-control-prev\" href=\"#carousel\" role=\"button\" data-slide=\"prev\">\n                                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                    <span class=\"sr-only\">Previous</span>\n                                </a>\n                                <a class=\"carousel-control-next\" href=\"#carousel\" role=\"button\" data-slide=\"next\">\n                                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                    <span class=\"sr-only\">Next</span>\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 \">\n                            <TwitterTimelineEmbed\n                                sourceType=\"profile\"\n                                screenName=\"Biospark286\"\n                                options={{height: 600}}\n                            />\n                        </div>\n                    </div>\n                </div>\n                    \n                <Footer/>\n\n            </div>\n\n\t\t);\n\t}\n}\n\nexport default home","import React, { Component } from 'react';\nimport Navbar from './nav';\nimport Footer from './footer';\nimport data from \"../files/projects\"\n\nclass projects extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n            list : data\n\t\t}\n        console.log(data)\n\t\n    }\n\n    //need to figure out if I want to manually add all the stuff for the projects. If mapped out. the first project needs to have a rounded aspect to it, then the last one\n\n    render() {\n\t\treturn (\n\t\t\t<div>\n                <div className=\"container p-0 mt-2 shadow\">\n                <Navbar/>\n\n                    <div className=\"row m-0 p-2 offcolor rounded\">\n                        {\n\n                            this.state.list.map((project, index) => {\n                                if(parseInt(index)%2 === 0){// if even\n                                    return <div className=\"row m-0\">\n                                        <div className=\"col-md-12 col-lg-6 p-3 contentcolor text-center\">\n                                            <h3>{project.title}</h3>\n                                            <hr/>\n                                            {project.tags.map((tag,index)=>{\n                                                return <span className=\"badge badge-primary ml-1 mr-1\">{tag}</span>\n                                            })}\n                                            <p className=\"mt-2\">{project.desc}</p>\n                                            <div>\n                                                <button type=\"button\" className=\"btn btn-primary float-left \">\n                                                    <a href={project.web} target=\"_blank\"  rel=\"noreferrer\">View Project On Web</a>\n                                                </button>\n\n                                                <button type=\"button\" className={project.disabled + \" btn btn-primary float-right\"}>\n                                                    <a href={project.git} target=\"_blank\"  rel=\"noreferrer\">View Project on GitHub</a>\n                                                </button>\n                                            </div>      \n                                        </div>\n                                        <div className=\"col-md-12 col-lg-6 contentcolor p-0 fill\">\n                                            \n                                            <img className=\"img-fluid\" src={project.pic} alt=\"Logo\"/>\n\n                                        </div>\n                                    </div>\n                                }else {// if odd\n                                    return <div className=\"row m-0\">\n\n                                        <div className=\"col-md-12 col-lg-6 order-12 order-lg-1 contentcolor p-0 fill\">\n                                            <img className=\"img-fluid\" src={project.pic} alt=\"Logo\"/>\n\n                                        </div>\n                                        <div className=\"col-md-12 col-lg-6 order-1 order-lg-12 p-3 contentcolor text-center\">\n                                            <h3>{project.title}</h3>\n                                            <hr/>\n                                            {project.tags.map((tag,index)=>{\n                                                return <span className=\"badge badge-primary ml-1 mr-1\">{tag}</span>\n                                            })}\n                                            <p className=\"mt-2\">{project.desc}</p>\n                                            <button type=\"button\" className=\"btn btn-primary float-left \">\n                                                <a href={project.web} target=\"_blank\"  rel=\"noreferrer\">View Project On Web</a>\n                                            </button>\n\n                                            <button type=\"button\" className={project.disabled + \" btn btn-primary float-right\"}>\n                                                <a href={project.git} target=\"_blank\" rel=\"noreferrer\">View Project on GitHub</a>\n                                            </button>      \n                                        </div>\n                                    </div>\n                                }\n                            })\n\n                        }\n                        \n                    </div> \n                    <Footer />  \n                </div>\n\n            </div>\n\n\t\t);\n\t}\n}\n\nexport default projects;","import React, { Component } from 'react';\nimport Footer from './footer';\nimport Navbar from './nav';\nclass about extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tskills : ['HTML5','CSS','JavaScript', 'Bootstrap',  'React.js', 'Express.js', 'Node.js', 'MongoDB', 'WordPress', 'MySQL', 'C#', 'C++', 'Java', 'Unity']\n\t\t}\n\n\t\n\t}\n\n\n    //Write a script for filling out all the skills\n    //About me needs to have some actual history\n\n\n\n    render() {\n\t\treturn (\n\t\t\t<div>\n               \n                <div className=\"container p-0 mt-2 shadow\">\n                <Navbar/>\n\n                    <div className=\"row m-0 offcolor p-2 shadow rounded\">\n                        <div className=\"col-md-8 p-3 contentcolor rounded\">\n                            <h3 className=\"text-center\">About Me</h3>\n                            <hr />\n                            <p className=\"indent\">\n                            From a young age I have had a strong interest in the Computer Science field. Computers have always fascinated me, as such I am always excited to learn more about them, and what sort of projects I can create with them. I have always been a self-motivated person opting to learn about how something works, rather than have someone else fix the issue for me. This mentality led to me learning how to develop websites, build computers, create programs, and learn other concepts. The main reason why I love most anything to deal with coding is due to the sheer amount there is to learn about different concepts, and finding ways to integrate those concepts into projects.\n                            </p>\n                            <p className=\"indent\">\n                            I have worked with several different languages over the years, as if late I have been working mostly with web technologies, and tools for game development such as Unity. As of late I have been practicing with MongoDB, React, Node.JS, Express.JS and Bootstrap in order to create fully fleshed out websites. During my course work at Western Governors University I created programs using Java, and MySQL for the database portion of these programs.\n\n                            </p>\n                            \n\n                        </div>\n                        <div className=\"col-md-4 pr-md-0 p-0 pl-md-2 rounded\">\n                            <div className=\"contentcolor ml-md-1 mt-sm-2 mt-2 mt-md-0 p-2 rounded\">\n                            <h3 className=\"text-center\">Skills</h3>\n                            <hr />\n                                <div className=\"row p-0\">\n                                    {\n                                        this.state.skills.map((skill) => (\n                                            <div className=\"col-6\"><span className=\"badge badge-primary w-100\">{skill}</span></div>\n                                            \n                                            )\n                                        )\n\n                                    }\n                                </div>\n                                \n\n                            </div>    \n                            <div className=\"contentcolor ml-md-1 mt-2 p-2 rounded\">\n                                <h3 className=\"text-center\">Education</h3>\n                                <hr />\n                                \n                                <h6>Western Governors University</h6>\n                                <p>\n                                Bachelor's Degree in Software Development\n                                </p>\n                            </div>\n                            <div className=\"contentcolor ml-md-1 mt-2 p-2 rounded\">\n                                <h3 className=\"text-center\">Certifications</h3>\n                                <hr />\n\n                                <h6>CompTIA Project+</h6>\n                                <p>Project Management Certification</p>\n                                <hr />\n                                <h6>CIW Web Specialist</h6>\n                                <p>Advanced HTML5 and CSS3 Specialist Certification</p>\n                                <hr />\n                                <h6>CompTIA A+</h6>\n                                <p>Technical Support and IT Operational Roles</p>\n                            </div>\n                        </div>\n                    </div>\n                <Footer/>\n\n                </div>\n                \n            </div>\n\n\t\t);\n\t}\n}\n\nexport default about;","import React, { Component } from 'react';\nimport Navbar from './nav';\nimport Footer from './footer';\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\n\n\nclass contact extends Component {\n    constructor() {\n        super();\n        let url = window.location.href;\n        let arr = url.split(\"/\");\n        let result = arr[0] + \"//\" + arr[2]\n        this.state = {\n          name: \"\",\n          email: \"\",\n          message: \"\",\n          status: \"Submit\",\n          error: \"\",\n          response: \"\",\n          path: result\n        };   \n\n    this.onChange = this.onChange.bind(this);\n    this.handleCaptchaResponseChange = this.handleCaptchaResponseChange.bind(this);\n\n\n    } \n\n    callback(){\n      console.log(\"done\");\n    }\n\n    verifyCallback(response){\n      console.log(response);\n\n    }\n\n    expiredCallback() {\n      console.log(`Recaptcha expired`);\n    };\n    \n\n    onChange(event) {\n      const state = this.state\n      state[event.target.name] = event.target.value;\n      this.setState(state);\n    }\n\n    handleCaptchaResponseChange(res) {\n      console.log(\"Captcha value:\", res)\n      this.setState({\n        response: res,\n      });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"Submitted)\")\n        const name = document.getElementById('name').value;\n        const email = document.getElementById('email').value;\n        const message = document.getElementById('message').value;\n        const response = this.state.response;\n        if(name === \"\"){\n            this.setState({error: \"Name was left blank.\"})\n\t\t\t\t\t\tdocument.getElementById(\"error\").classList.remove('d-none');\n\n        }else if(email === \"\"){\n          this.setState({error: \"E-Mail was left blank\"})\n\t\t\t\t\t\tdocument.getElementById(\"error\").classList.remove('d-none');\n\n       }else if(message === \"\"){\n        this.setState({error: \"Message was left blank\"})\n\t\t\t\t\t\tdocument.getElementById(\"error\").classList.remove('d-none');\n      }else if(response === \"\" || response === null){\n        this.setState({error: \"The reCAPTCHA was invalid. Go back and try it again.\"})\n\t\t\t\t\t\tdocument.getElementById(\"error\").classList.remove('d-none');\n      }\n\n      axios.post(this.state.path + '/api/rcap',{'g-recaptcha-response' : response})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data)\n\t\t\t})\n        \n      \n   \n    }\n\n    \n    resetForm(){\n      document.getElementById('contact-form').reset();\n    }\n\n    render() {\n\t\treturn (\n\t\t\t<div>\n                <div className=\"container p-2  rounded\">\n                <Navbar/>\n\n                    <div className=\"row m-0 p-2 rounded offcolor\">\n                        <div className=\"col-md-12 p-0 rounded\">\n                            <div className=\"contentcolor p-3 rounded\">\n                            <h3>Contact Me</h3>\n                            <hr/>\n                            \n                            <form id=\"contact-form\" className=\"mb-2\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                                <div className=\"form-group\">\n                                    <label for=\"name\">Name</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"name\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email address</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label for=\"message\">Message</label>\n                                    <textarea className=\"form-control\" rows=\"5\" id=\"message\"></textarea>\n                                </div>\n                                <ReCAPTCHA \n                                  className=\"mb-2\"\n                                  ref={(el) => { this.recaptcha = el; }}\n                                  sitekey=\"6Lc8sTYaAAAAAN7ttPS6jmXZ_J5ZUP_IY2YUB_VT\" \n                                  onChange={this.handleCaptchaResponseChange} \n                                  verifyCallback={this.verifyCallback}\n                                  onloadCallback={this.callback}\n                                />\n\n                                <button  className=\"btn btn-primary\">Submit</button>\n                            </form>\n                              <div class=\"alert alert-danger d-none\" id=\"error\" role=\"alert\">\n                              {this.state.error}\n                              </div>\n                              <div class=\"alert alert-success d-none\" id=\"success\" role=\"alert\">\n                                {this.state.error}\n                              </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n\n            <Footer/>\n\n\n                </div>\n            </div>\n\n\t\t);\n\t}\n}\n\nexport default contact;","import React from 'react';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport home from './routes/home';\nimport projects from './routes/projects';\nimport about from './routes/about';\nimport contact from './routes/contact';\n\n\n\nfunction App() {\n  return (\n    <main className=\"main full-height\">\n      \n    <BrowserRouter>\n      \n        <Route path=\"/\" component={withRouter(home)} exact />\n        <Route path=\"/projects\" component={withRouter(projects)} />\n        <Route path=\"/about\" component={withRouter(about)} />\n        <Route path=\"/contact\" component={withRouter(contact)} />\n \n    </BrowserRouter>\n  </main>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}